name: Build and deploy

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          # Do not publish the image.
          push: false
          # Set the tag.
          tags: postgresql-patroni

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s

      - name: Setup required permissions
        run: |
          kubectl create role pg --verb=create,get,list,patch,update,watch --resource=configmaps,endpoints,pods,services
          kubectl create rolebinding pg --role=pg --serviceaccount=default:default

      - name: Deploy image
        run: |
          for i in 0 1 2
          do
          kubectl run pg-$i --image=postgresql-patroni --image-pull-policy IfNotPresent \
          --env 'PATRONI_KUBERNETES_LABELS={application: patroni, cluster-name: pg}' \
          --env 'PATRONI_KUBERNETES_NAMESPACE=default' \
          --env "PATRONI_NAME=pg-$i" \
          --env 'PATRONI_SCOPE=pg' \
          --env 'PATRONI_REPLICATION_PASSWORD=${{ secrets.PATRONI_REPLICATION_PASSWORD }}' \
          --env 'PATRONI_SUPERUSER_PASSWORD=${{ secrets.PATRONI_SUPERUSER_PASSWORD }}' \
          --labels 'application=patroni,cluster-name=pg' \
          --override-type='strategic' \
          --overrides='{"spec": {"containers": [{"name": "pg-'$i'","env": [{"name": "PATRONI_KUBERNETES_POD_IP","valueFrom": {"fieldRef": {"fieldPath": "status.podIP"}}}]}]}}'
          done

      # - name: Check the deployed workloads (using Patroni API health endpoint)
      #   uses: jtalk/url-health-check-action@v2
      #   with:
      #     # Check the following URLs one by one sequentially
      #     url: https://example.com|http://example.com
      #     # Fail this action after this many failed attempts
      #     max-attempts: 3
      #     # Delay between retries
      #     retry-delay: 5s # Optional, only applicable to max-attempts > 1
      #     # Retry all errors, including 404. This option might trigger curl upgrade.
      #     retry-all: false # Optional, defaults to "false"